# This .travis.yml file was autogenerated from github.com/ericdill/travis-little-helper/template.py.
# Please do not edit this by hand!

language: python
sudo: false
services:
- mongodb
matrix:
  include:{% for pyver in python %}
  - python: {{ pyver }}{% endfor %}
{% if allow_failures %}
  allow_failures:{% for fail_version in allow_failures %}
    - python: {{ fail_version }}{% endfor %}
{% endif %}
before_install:
# INSTALL CONDA
- wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
- chmod +x miniconda.sh
- "./miniconda.sh -b -p /home/travis/mc"
- export PATH=/home/travis/mc/bin:$PATH
- conda config --set always_yes true
- conda update conda --yes{% for channel in conda_channels %}
- conda config --add channels {{ channel }}{% endfor %}
{% if require_metadatastore_config %}
# DO SOME METADATASTORE SPECIFIC CONFIGURATION
- export MDS_HOST=localhost
- export MDS_DATABASE=test
- export MDS_TIMEZONE=US/Eastern
- mkdir -p /home/travis/.config/metadatastore
- 'echo ''port: 27017'' > /home/travis/.config/metadatastore/connection.yml'
{% endif %}
# CONFIGURE USEFUL ENVIRONMENTAL VARIABLES
- export OWNER_NAME=$(IFS="/"; arr=($TRAVIS_REPO_SLUG); echo ${arr[0]})
- export REPO_NAME=$(IFS="/"; arr=($TRAVIS_REPO_SLUG); echo ${arr[1]})
- export CONDA_BUILD_COMMAND="conda build conda-recipe --python=$TRAVIS_PYTHON_VERSION"
- export GIT_FULL_HASH=`git rev-parse HEAD`
- export CLEAN_ANACONDA_CHANNEL={{ clean_upload_channel }}
# SOME DEBUG OUTPUT
- echo "OWNER_NAME=$OWNER_NAME"
- echo "REPO_NAME=$REPO_NAME"
- echo "TRAVIS_COMMIT=$TRAVIS_COMMIT"
- git describe
# INSTALL DEPS FOR BUILDING AND UPLOADING
- conda install conda-build jinja2 anaconda-client
- conda install -c ericdill depfinder
- pip install https://github.com/ericdill/conda-skeletor/zipball/master#egg=conda_skeletor
# SET UP THE TEST ENVIRONMENT
- conda create -n testenv pip nose python=$TRAVIS_PYTHON_VERSION "pymongo=2.9" six pyyaml numpy pandas jinja2 mongoengine boltons prettytable humanize
- source activate testenv
- pip install coveralls codecov
install:
- python setup.py install
# SOME DEBUG OUTPUT
- python -c "import $REPO_NAME; print($REPO_NAME.__version__)"
script:
- python run_tests.py -v{% if conda_build %}
# NEED TO GET (AT LEAST) THE COMMITS UP TO THE MOST RECENT TAG
- git fetch --unshallow
- "$CONDA_BUILD_COMMAND"{% endif %}
after_success:
# UPLOAD COVERAGE DATA
- coveralls
- codecov
- source deactivate
{% if conda_upload %}
# CLEAN ANACONDA.ORG/LIGHTSOURCE2-DEV/METADATASTORE AND UPLOAD CONDA BINARY
# IF WE ARE ON THE MASTER BRANCH OF THE NSLS-II REPOSITORY AND THIS IS NOT A
# PULL REQUEST
- git clone https://github.com/ericdill/travis-little-helper
- if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then
    $CONDA_BUILD_COMMAND --output | bash travis-little-helper/anaconda-version-string.sh > version;
    anaconda login --username {{ anaconda_user }} --password $ANACONDA_PASS --hostname "$TRAVIS_PYTHON_VERSION-`cat version`";
    bash travis-little-helper/clean-anaconda-channel.sh {{ conda_upload_channel }} $REPO_NAME $CLEAN_ANACONDA_CHANNEL;
    anaconda upload -u {{ conda_upload_channel }} `$CONDA_BUILD_COMMAND --output`;
    anaconda logout;
  fi;
{% endif %}
env:
  global:
    secure: "pYO9aM4keSwyVrom3/tbmjE0mwuSBKJ+SroIF56JUVLh8jT3jiHmwZfI3fUNY6erNewyoiFhkDDBvyY/gxXGHma6T0RcV+LAZmWCXePBL8fsm5X93lo3RlPFtqmXbkOW7C0+h4RDEMQP/UYsNJvL7YbmeDT+fNozV/CpK1zJtU4="
